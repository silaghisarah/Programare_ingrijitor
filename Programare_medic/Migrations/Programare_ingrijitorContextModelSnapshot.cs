// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Programare_ingrijitor.Data;

#nullable disable

namespace Programare_ingrijitor.Migrations
{
    [DbContext(typeof(Programare_ingrijitorContext))]
    partial class Programare_ingrijitorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Programare_ingrijitor.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireCategorie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Ingrijitor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ingrijitor");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataProgramare")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IngrijitorID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<int?>("ZonaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("IngrijitorID");

                    b.HasIndex("ServiciuID");

                    b.HasIndex("ZonaID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Cost_consultatie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Data_Programare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denumire_Serviciu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("IngrijitorID")
                        .HasColumnType("int");

                    b.Property<int?>("ZonaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IngrijitorID");

                    b.HasIndex("ZonaID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.ServiciuCategorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("ServiciuID");

                    b.ToTable("ServiciuCategorie");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Zona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireZona")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Programare", b =>
                {
                    b.HasOne("Programare_ingrijitor.Models.Client", "Client")
                        .WithMany("Programari")
                        .HasForeignKey("ClientID");

                    b.HasOne("Programare_ingrijitor.Models.Ingrijitor", "Ingrijitor")
                        .WithMany()
                        .HasForeignKey("IngrijitorID");

                    b.HasOne("Programare_ingrijitor.Models.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuID");

                    b.HasOne("Programare_ingrijitor.Models.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaID");

                    b.Navigation("Client");

                    b.Navigation("Ingrijitor");

                    b.Navigation("Serviciu");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Serviciu", b =>
                {
                    b.HasOne("Programare_ingrijitor.Models.Ingrijitor", "Ingrijitor")
                        .WithMany("Servicii")
                        .HasForeignKey("IngrijitorID");

                    b.HasOne("Programare_ingrijitor.Models.Zona", "Zona")
                        .WithMany("Servicii")
                        .HasForeignKey("ZonaID");

                    b.Navigation("Ingrijitor");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.ServiciuCategorie", b =>
                {
                    b.HasOne("Programare_ingrijitor.Models.Categorie", "Categorie")
                        .WithMany("ServiciuCategorii")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Programare_ingrijitor.Models.Serviciu", "Serviciu")
                        .WithMany("ServiciuCategorii")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Serviciu");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Categorie", b =>
                {
                    b.Navigation("ServiciuCategorii");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Client", b =>
                {
                    b.Navigation("Programari");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Ingrijitor", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Serviciu", b =>
                {
                    b.Navigation("ServiciuCategorii");
                });

            modelBuilder.Entity("Programare_ingrijitor.Models.Zona", b =>
                {
                    b.Navigation("Servicii");
                });
#pragma warning restore 612, 618
        }
    }
}
